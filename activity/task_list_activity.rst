================
タスクリスト画面
================

物理名、宣言
============

``class TaskListActivity : AbstractAppActivity()``


画面部品
========

.. list-table::
   :header-rows: 1

   * - 論理名
     - 種別
     - I/O
     - 最大桁数
     - 入力規則
     - 初期値
     - 導入元
     - 備考
   * - 表示順
     - Spinner
     - I/O
     - -
     - -
     - 期日順
     - -
     - 期日順、優先度順、名前順の3種類
   * - タスクリスト
     - RecyclerView
     - I/O
     - -
     - -
     - -
     - -
     - 
   * - タスクカード
     - CardView
     - I/O
     - -
     - -
     - -
     - -
     - タスクリスト内に表示
   * - 完了チェック
     - CheckBox
     - I/O
     - -
     - -
     - checked = false
     - タスクアイテム.完了チェック
     - -
   * - タスク名
     - TextView
     - O
     - -
     - -
     - -
     - タスクアイテム.タスク名
     - elipsise = end, タスクアイテム.完了チェック = true のとき、取り消し線を描画
   * - 期日
     - TextView
     - O
     - -
     - -
     - -
     - タスクアイテム.期日
     - nullの場合「-」を表示
   * - 優先度
     - RatingBar
     - O
     - -
     - -
     - 1
     - タスクアイテム.優先度
     - -
   * - タスク追加ボタン
     - FloatingActionButton
     - I/O
     - -
     - -
     - -
     - -
     - 「＋」を画像表示

イベント処理
============

初期化
------

#. | レイアウトXMLを展開後、Viewをinjectする。
   | ※ `androidx` で行う。
#. | Firebase Realtime Database から、同期できていないユーザーのタスクを取得する。
   | ※ :ref:`get_realtime_database` により取得時に自動的に処理される。
#. ``SharedPreference`` からデフォルトの並び順を取得する。
#. ユーザーのタスク一覧を、 ``SharedPreference`` の並び順に従いソートする。

   +----------------+------------------------------------------+
   | 並び順         | ソート順                                 |
   +================+==========================================+
   | 期日順の場合   | 期日(降順)、優先度(降順)、名前の順       |
   +----------------+------------------------------------------+
   | 優先度順の場合 | 優先度(降順)、期日(降順)、名前の順       |
   +----------------+------------------------------------------+
   | 名前順の場合   | 名前(昇順)、期日(降順)、優先度(降順)の順 |
   +----------------+------------------------------------------+

#. ソート結果を画面.タスクリストにセットする。
#. 画面.表示順 の選択値を ``SharedPreference`` の並び順にする。

.. _on_task_card_click:

タスクカードクリック時
----------------------

#. カードのタスクアイテム.タスクIDを取得する。
#. クリックされた場所が画面.タスクカード.完了チェックの場合、以下の処理を行う。

   #. ``SharedPreference`` から「タスクを終了させるときに確認ダイアログを出すかどうか」の設定を取得する。
   #. 設定値が ``true`` または設定なしの場合、「This task is completed. Is it OK?(このタスクは完了されます。よろしいですか？)」と確認ダイアログを表示する。

      #. 確認ダイアログで「Yes」を選択したとき、以下を実施する。

         #. このタスクアイテムの以下を更新し、Realtime Databaseに反映する。

         +--------------+------------+
         | プロパティ   | 設定する値 |
         +==============+============+
         | 完了チェック | true       |
         +--------------+------------+
         | 更新日時     | 現在日時   |
         +--------------+------------+

         #. クリックされた画面.タスクカード.タスク名に取り消し線を描画する。

      #. 確認ダイアログで「No」を選択したとき、または確認ダイアログをキャンセルしたときは、何も行わない。

   #. 設定値が ``false`` の場合、以下を実施する。

      #. このタスクアイテムの以下を更新し、Realtime Databaseに反映する。

      +--------------+------------+
      | プロパティ   | 設定する値 |
      +==============+============+
      | 完了チェック | true       |
      +--------------+------------+
      | 更新日時     | 現在日時   |
      +--------------+------------+

      #. クリックされた画面.タスクカード.タスク名に取り消し線を描画する。

#. クリックされた場所が画面.タスクカード.完了チェック **以外** の場合、タスクアイテム.タスクIDを引数に :ref:`task_editor_activity` を呼び出す。

タスク追加ボタンクリック時
--------------------------

#. 引数なしで :ref:`task_editor_activity` を呼び出す。

表示順変更時
------------

#. ユーザーのタスク一覧を、 ``SharedPreference`` の並び順に従いソートする。

   +----------------+------------------------------------------+
   | 並び順         | ソート順                                 |
   +================+==========================================+
   | 期日順の場合   | 期日(降順)、優先度(降順)、名前の順       |
   +----------------+------------------------------------------+
   | 優先度順の場合 | 優先度(降順)、期日(降順)、名前の順       |
   +----------------+------------------------------------------+
   | 名前順の場合   | 名前(昇順)、期日(降順)、優先度(降順)の順 |
   +----------------+------------------------------------------+

#. ソート結果を画面.タスクリストにセットする。
