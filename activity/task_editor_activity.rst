.. _task_editor_activity:

==============
タスク編集画面
==============

物理名、宣言
============

``class TaskEditorActivity : AbstractAppActivity()``


画面部品
========

.. list-table::
   :header-rows: 1

   * - 論理名
     - 種別
     - I/O
     - 最大桁数
     - 入力規則
     - 初期値
     - 導入元
     - 備考
   * - タイトル
     - TextView
     - O
     - -
     - -
     - Add Task
     - -
     - 編集の場合「Edit Task」
   * - タスク名
     - EditText
     - I/O
     - 32
     - -
     - -
     - タスクアイテム.タスク名
     - 追加時は空欄
   * - 期日
     - Button
     - I/O
     - -
     - -
     - -
     - タスクアイテム.期日
     - 追加時は現在日時の1週間後、端末の ``DateFormat`` を取得して整形
   * - 優先度
     - RatingBar
     - I/O
     - -
     - -
     - -
     - タスクアイテム.優先度
     - 追加時は1
   * - タスク詳細
     - EditText
     - I/O
     - 200
     - -
     - -
     - タスクアイテム.タスク詳細
     - 追加時は空欄
   * - タスク詳細文字数
     - TextView
     - O
     - -
     - -
     - -
     - タスクアイテム.タスク詳細 の文字数
     - 追加時は0固定
   * - 完了チェック
     - CheckBox
     - I/O
     - -
     - -
     - Done
     - タスクアイテム.完了チェック
     - 追加時は非表示( ``View.INVISIBLE`` )かつチェックオフ
   * - 登録ボタン
     - FloatingActionButton
     - I/O
     - -
     - -
     - -
     - -
     - 鉛筆マークを描画

イベント処理
============

初期化
------

#. | レイアウトXMLを展開後、Viewをinjectする。
   | ※ ``androidx`` で行う。
#. ``Intent`` からタスクIDを取得する。
#. タスクIDが取得できた場合は、以下を行う。

   #. Firebase Realtime Database から、タスクIDに一致するタスクアイテムを取得する。
   #. タスクアイテムの各値を画面へ反映する。
   #. タイトルを「Edit Task」にする。
   #. 期日格納変数に、タスクアイテム.期日を代入する。

#. タスクIDが取得できなかった場合は、以下を行う。

   #. 画面部品の記述にしたがい画面を初期化する。
   #. 期日格納変数に、現在日時の1週間後を代入する。

タスク詳細入力時
----------------

#. 画面部品.タスク詳細への文字の追加削除が発生するたびに、発生後の文字数を取得する。
#. 文字数を画面部品.タスク詳細文字数に反映する。
#. 反映後、文字数が181以上の場合は文字色を赤に、180以下の場合は文字色を黒にする。

期日クリック時
--------------

#. 期日格納変数の値を、一時変数に退避する。
#. ``DatePicker`` の ``DialogFragment`` を表示する。
#. ``DialogFragment`` がキャンセルされず、 ``DatePicker`` から値が返ってきた場合、期日格納変数の年月日を ``DatePicker`` の値に置き換える。
#. ``TimePicker`` の ``DialogFragment`` を表示する。
#. ``DialogFragment`` がキャンセルされず、 ``TimePicker`` から値が返ってきた場合、期日格納変数の時分を ``TimePicker`` の値に置き換える。
#. 期日格納変数の値を端末の `DateFormat` でフォーマットし、期日ボタンに表示する。
#. いずれかの ``DialogFragment`` がキャンセルされた場合、一時変数の値を期日格納変数に書き戻す。

タスク登録ボタンクリック時
--------------------------

#. 画面部品.タスク名の入力値を取得し、文字数が33文字以上の場合は「Task name must be 32 characters or less.」をダイアログ表示し、以後の処理を終了する。
#. 画面部品.タスク詳細の入力値を取得し、文字数が201文字以上の場合は「Details must be 200 characters or less.」をダイアログ表示し、以後の処理を終了する。
#. 画面部品.完了チェックがオンの時、以下を行う。

   #. ``SharedPreference`` から「タスクを終了させるときに確認ダイアログを出すかどうか」の設定を取得する。
   #. 設定値が ``true`` または設定なしの場合、「This task is completed. Is it OK?(このタスクは完了されます。よろしいですか？)」と確認ダイアログを表示する。

      #. 確認ダイアログで「Yes」を選択したとき、 :ref:`on_task_item_updated` を実施する。
      #. 確認ダイアログで「No」を選択したとき、または確認ダイアログをキャンセルしたときは、何も行わない。

   #. 設定値が ``false`` の場合、 :ref:`on_task_item_updated` を実施する。

.. _on_task_item_updated:

タスクアイテム反映処理
----------------------

#. 各画面部品の入力値から、タスクアイテムを作成する。

   +------------+--------------------------------------------------------------+
   | プロパティ | 導入元                                                       |
   +============+==============================================================+
   | taskId     | ``UUID.randomUUID().toString()``                             |
   +------------+--------------------------------------------------------------+
   | userId     | ``FirebaseUser#uid``                                         |
   +------------+--------------------------------------------------------------+
   | taskName   | 画面部品.タスク名                                            |
   +------------+--------------------------------------------------------------+
   | dueDate    | 期日格納変数の値を ``yyyyMMddHHmmss`` でフォーマットしたもの |
   +------------+--------------------------------------------------------------+
   | priority   | 画面部品.優先度の値                                          |
   +------------+--------------------------------------------------------------+
   | taskDetail | 画面部品.タスク詳細                                          |
   +------------+--------------------------------------------------------------+
   | finished   | 画面部品.完了チェックの値                                    |
   +------------+--------------------------------------------------------------+
   | createdAt  | 作成時のみ現在日時、それ以外は操作しない                     |
   +------------+--------------------------------------------------------------+
   | updatedAt  | 現在日時                                                     |
   +------------+--------------------------------------------------------------+

#. Firebase Realtime Database へ反映する。
#. 反映終了後、作成時は「Task created.」、更新時は「Task modified.」を、それぞれ ``Toast`` 表示する。
#. :ref:`task_list_activity` へ遷移する。
